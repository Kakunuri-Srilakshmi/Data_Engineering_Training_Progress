CREATE DATABASE company_db;
USE company_db;

-- Employees table
CREATE TABLE employees (
  employee_id INT AUTO_INCREMENT PRIMARY KEY,
  first_name VARCHAR(60) NOT NULL,
  last_name VARCHAR(60),
  department VARCHAR(60) NOT NULL,
  designation VARCHAR(80),
  email VARCHAR(120) UNIQUE,
  hired_date DATE,
  is_active TINYINT(1) DEFAULT 1,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Attendance table
CREATE TABLE attendance (
  attendance_id INT AUTO_INCREMENT PRIMARY KEY,
  employee_id INT NOT NULL,
  attendance_date DATE NOT NULL,
  clock_in DATETIME NOT NULL,
  clock_out DATETIME,
  note VARCHAR(255),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (employee_id) REFERENCES employees(employee_id)
);

-- Tasks table
CREATE TABLE tasks (
  task_id INT AUTO_INCREMENT PRIMARY KEY,
  employee_id INT NOT NULL,
  title VARCHAR(200) NOT NULL,
  description TEXT,
  assigned_date DATE,
  due_date DATE,
  completed_date DATE,
  status ENUM('pending','in_progress','completed','blocked') DEFAULT 'pending',
  estimated_hours DECIMAL(5,2),
  actual_hours DECIMAL(6,2),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (employee_id) REFERENCES employees(employee_id)
);

-- Insert employees details
INSERT INTO employees (first_name,last_name,department,designation,email,hired_date) VALUES
('Suresh','Reddy','Engineering','Software Engineer','suresh.reddy@example.com','2023-06-01'),
('Lakshmi','Devi','HR','HR Executive','lakshmi.devi@example.com','2022-09-15'),
('Ravi','Kumar','Engineering','DevOps Engineer','ravi.kumar@example.com','2024-01-10'),
('Priya','Naidu','Marketing','Marketing Executive','priya.naidu@example.com','2021-11-05'),
('Keerthi','Reddy','Engineering','Frontend Developer','keerthi.reddy@example.com','2023-03-22'),
('Gowtham','Rao','QA','QA Engineer','gowtham.rao@example.com','2022-12-01'),
('Chaitanya','K','Product','Product Analyst','chaitanya.k@example.com','2024-04-02'),
('Niharika','M','Design','UI/UX Designer','niharika.m@example.com','2020-07-18'),
('Bhavani','S','Finance','Accountant','bhavani.s@example.com','2019-05-30'),
('Venkata','Rao','Operations','Operations Manager','venkata.rao@example.com','2018-02-12'),
('Hemanth','P','Engineering','Backend Developer','hemanth.p@example.com','2023-08-09'),
('Shruthi','T','Support','Customer Support','shruthi.t@example.com','2021-01-25'),
('Ramya','Kumar','Marketing','Content Writer','ramya.kumar@example.com','2022-06-14'),
('Kranthi','S','Engineering','Intern','kranthi.s@example.com','2025-02-01'),
('Padmavathi','R','HR','Recruiter','padmavathi.r@example.com','2020-10-20');

-- One-week attendance sample
INSERT INTO attendance (employee_id, attendance_date, clock_in, clock_out, note) VALUES
(1,'2025-09-11','2025-09-11 09:05:00','2025-09-11 18:10:00','On time'),
(1,'2025-09-12','2025-09-12 09:15:00','2025-09-12 18:20:00','Slightly late'),
(1,'2025-09-13','2025-09-13 09:03:00','2025-09-13 18:05:00','On time'),
(2,'2025-09-11','2025-09-11 09:00:00','2025-09-11 17:55:00','On time'),
(2,'2025-09-12','2025-09-12 09:10:00','2025-09-12 18:05:00',''),
(3,'2025-09-11','2025-09-11 09:07:00','2025-09-11 18:00:00','On time'),
(4,'2025-09-11','2025-09-11 09:02:00','2025-09-11 17:50:00','Early out'),
(5,'2025-09-11','2025-09-11 09:12:00','2025-09-11 18:30:00','Stayed late'),
(6,'2025-09-11','2025-09-11 09:09:00','2025-09-11 18:00:00',''),
(7,'2025-09-11','2025-09-11 09:00:00','2025-09-11 18:00:00','On time'),
(8,'2025-09-11','2025-09-11 09:20:00','2025-09-11 18:10:00','Late'),
(9,'2025-09-11','2025-09-11 09:04:00','2025-09-11 18:15:00',''),
(10,'2025-09-11','2025-09-11 09:03:00','2025-09-11 18:05:00','On time'),
(11,'2025-09-11','2025-09-11 09:11:00','2025-09-11 18:25:00','Late'),
(12,'2025-09-11','2025-09-11 09:00:00','2025-09-11 18:00:00','Perfect'),
(13,'2025-09-11','2025-09-11 09:18:00','2025-09-11 18:20:00','Late'),
(14,'2025-09-11','2025-09-11 09:08:00','2025-09-11 18:00:00','On time'),
(15,'2025-09-11','2025-09-11 09:05:00','2025-09-11 18:10:00','Good');

-- task
INSERT INTO tasks (employee_id,title,description,assigned_date,due_date,completed_date,estimated_hours,actual_hours,status)
VALUES (1,'Fix login bug','Investigate and fix login failure on mobile','2025-09-11','2025-09-20','2025-09-12',4.0,4.5,'completed');

-- Stored Procedure to calculate total working hours per employee
DELIMITER //
CREATE PROCEDURE total_hours(IN empId INT, IN y INT, IN m INT)
BEGIN
  SELECT e.first_name, e.last_name,
         IFNULL(ROUND(SUM(TIMESTAMPDIFF(SECOND, a.clock_in, a.clock_out))/3600,2),0) AS total_hours
  FROM employees e
  LEFT JOIN attendance a ON e.employee_id=a.employee_id
       AND YEAR(a.attendance_date)=y AND MONTH(a.attendance_date)=m
  WHERE e.employee_id=empId
  GROUP BY e.employee_id;
END //
DELIMITER ;

-- Example call
CALL total_hours(1,2025,9);

